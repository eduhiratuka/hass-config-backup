collapsable_card_template:
  default:
    # Par창metros Principais
    - main_card_entity: null
    - main_card_name: '{{ state_attr(entity, ''friendly_name'') }}'

    # Par창metros do Mapeamento de Estado
    - state_map:
      - state: 'on'
        state_friendly: 'Ligado'
        contents:
          - state
        icon: mdi:power-plug
        icon_color: primary
      - state: 'off'
        state_friendly: 'Desligado'
        contents:
          - state
        icon: mdi:power-plug-off
        icon_color: disabled

    # Par창metros do Collapsable Button
    - collapsable_cards: null
  card:
    type: custom:layout-card
    layout_type: custom:grid-layout
    layout:
      grid-template-columns: calc(100% - 66px) 66px
      grid-template-rows: auto
      grid-template-areas: |
        'collapsable_status collapsable_button'
        'collapsable_container collapsable_container'
    cards: 



# ==================================================
# |Area do Status                                  |
# ==================================================
      - type: custom:decluttering-card
        template: generic_status_template2
        variables:
          - status_entity: '[[main_card_entity]]'
          - status_name: '[[main_card_name]]'
          - state_map: '[[state_map]]'
          - ghost_border: left
          - extra_classes: collapsable_status collapsable_card
        view_layout:
          grid-area: collapsable_status



# ==================================================
# |Bot찾o de Expandir/Colapso                       |
# ==================================================
      - type: custom:decluttering-card
        template: generic_action_template2
        variables:
          - action_entity: '[[main_card_entity]]'
          - action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.javascript
                data:
                  code: >
                    const container = document.querySelector('body > home-assistant').shadowRoot.querySelector('home-assistant-main').shadowRoot.querySelector('ha-drawer > partial-panel-resolver > ha-panel-lovelace').shadowRoot.querySelector('hui-root').shadowRoot.querySelector('#view > hui-view > grid-layout').shadowRoot.querySelector('#root > decluttering-card:nth-child(1)').shadowRoot.querySelector('#declutter-child').shadowRoot.querySelector('grid-layout');
                    const container = document.querySelector('body > home-assistant').shadowRoot.querySelector('home-assistant-main').shadowRoot.querySelector('ha-drawer > partial-panel-resolver > ha-panel-lovelace').shadowRoot.querySelector('hui-root').shadowRoot.querySelector('#view > hui-view > grid-layout').shadowRoot.querySelector('#root > decluttering-card:nth-child(2)').shadowRoot.querySelector('#declutter-child').shadowRoot.querySelector('grid-layout');

                    const collapsable_status = container.shadowRoot.querySelector('#root > decluttering-card:nth-child(1)').shadowRoot.querySelector('#declutter-child').shadowRoot.querySelector('ha-card');
                    const collapsable_button = container.shadowRoot.querySelector('#root > decluttering-card:nth-child(2)').shadowRoot.querySelector('#declutter-child').shadowRoot.querySelector('ha-card');
                    const collapsable_container = container.shadowRoot.querySelector('#root > mod-card').shadowRoot.querySelector('ha-card');

                    collapsable_status.classList.toggle('show');
                    collapsable_button.classList.toggle('show');
                    collapsable_container.classList.toggle('show');
          - state_map:
            - state: 'on'
              icon: mdi:chevron-right
            - state: 'off'
              icon: mdi:chevron-right
          - extra_styles: >-
              ha-card.collapsable_card.collapsable_button ha-state-icon { transform: rotate(0); transition: all .2s ease-in-out; }
              ha-card.collapsable_card.collapsable_button.show ha-state-icon { transform: rotate(90deg); }
              ha-card.collapsable_card.collapsable_button.show { border-bottom: 0; border-bottom-left-radius: 0; border-bottom-right-radius: 0; }
          - ghost_border: right
          - extra_classes: collapsable_button collapsable_card
        view_layout:
          grid-area: collapsable_button



# ==================================================
# |Area do Container de Cards                      |
# ==================================================
      - type: custom:mod-card
        card:
          type: custom:layout-card
          layout_type: custom:grid-layout
          layout:
            grid-template-columns: auto
            grid-template-rows: auto
            margin: 0
          cards: '[[collapsable_cards]]'
        card_mod:
          class: collapsable_container collapsable_card show
          style:
            .: |
              ha-card.show {
                display: block;
              }
              ha-card:not(.show) {
                display: none;
              }
        view_layout:
          grid-area: collapsable_container
        
























