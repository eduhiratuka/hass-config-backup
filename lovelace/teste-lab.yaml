decluttering_templates:
  generic_status_template:
    default:
      - entity: null
      - name: null
      - icon: none
      - state_map:
          - state: 'on'
            name: Ligado
            color: primary
            icon: mdi:power-plug
          - state: 'off'
            name: Desligado
            color: disabled
            icon: mdi:power-plug-off
      - color_mode: state_map
      - ghost_border: none
      - ghost_padding: none
    card:
      type: custom:mushroom-template-card
      state_map: '[[state_map]]'
      primary: '[[name]]'
      secondary: |
        {{
          config.state_map | 
          selectattr('state', 'eq', states('[[entity]]')) | 
          map(attribute="name") | 
          first 
        }}
      icon: |
        {% set default_icon = '[[icon]]' %}
        {% if default_icon != 'none' %}
          {{ default_icon }}
        {% else %}
          {{
            config.state_map | 
            selectattr('state', 'eq', states('[[entity]]')) | 
            map(attribute="icon") | 
            first 
          }}
        {% endif %}
      icon_color: |
        {% if '[[color_mode]]' == 'state_map' %}
          {{
            config.state_map | 
            selectattr('state', 'eq', states('[[entity]]')) | 
            map(attribute="color") | 
            first 
          }}
        {% endif %}
      card_mod:
        class: >-
          generic_status ghost_card_[[ghost_border]]
          ghost_padding_[[ghost_padding]]
        style:
          mushroom-shape-icon$: |
            {% if '[[color_mode]]' == 'rgb' %}
              {% set entity = '[[entity]]' %}
              {% set rgb = state_attr(entity, "rgb_color") %}
              .shape {
                --shape-color: rgba({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }}, 0.2) !important;
                --icon-color: rgb({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }});
              }
            {% endif %}
  generic_action_template:
    default:
      - action_entity: null
      - action_state: null
      - action_color: null
      - action_icon: mdi:home-assistant
      - action_command:
          action: none
      - disable_when: never
      - ghost_border: none
      - ghost_padding: none
    card:
      type: custom:mushroom-template-card
      primary: ''
      secondary: ''
      icon: '[[action_icon]]'
      icon_color: |
        {% if is_state('[[action_entity]]', '[[action_state]]') %}
          [[action_color]]
        {% endif %}
      layout: horizontal
      tap_action: '[[action_command]]'
      card_mod:
        class: >-
          generic_action ghost_card_[[ghost_border]]
          ghost_padding_[[ghost_padding]]
        style:
          mushroom-shape-icon$: |
            :host {
              --icon-border-radius: 12px
            }
            .shape {
              width: 100% !important;
            }
          mushroom-card$: |
            .container {
              flex-direction: column !important;
            }
          mushroom-state-item$: |
            .container {
              flex-direction: column !important;
              align-items: stretch !important;
            }
          .: >
            {% set disabled = false %}

            {% set disabled_when = '[[disable_when]]' %}

            {% if disabled_when == 'always' %}
              {% set disabled = true %}
            {% elif disabled_when == 'active' and is_state('[[action_entity]]',
            '[[action_state]]') %}
              {% set disabled = true %}
            {% elif disabled_when == 'inactive' and not
            is_state('[[action_entity]]', '[[action_state]]') %}
              {% set disabled = true %}
            {% endif %}


            ha-card mushroom-state-item {
              {% if disabled %}
                pointer-events: none;
              {% endif %}
            }

            ha-card mushroom-shape-icon {
              --icon-color: var(--primary-text-color)
            }
  generic_number_template:
    default:
      - number_entity: null
      - state_entity: null
      - state_map: null
      - ghost_border: none
      - ghost_padding: none
    card:
      type: custom:mushroom-number-card
      entity: '[[number_entity]]'
      primary_info: none
      secondary_info: none
      layout: horizontal
      display_mode: buttons
      tap_action:
        action: none
      state_map: '[[state_map]]'
      card_mod:
        class: >-
          generic_number ghost_card_[[ghost_border]]
          ghost_padding_[[ghost_padding]]
        style: |
          {% set color = config.state_map |
            selectattr('state', 'eq', states('[[state_entity]]')) |
            map(attribute="color") |
            first
          %}

          ha-card { 
              --rgb-state-number: var(--rgb-{{ color }});
          }
          mushroom-state-item {
            cursor: default;
            pointer-events: none;
          }
          mushroom-badge-icon {
            display: none;
          }
  generic_select_template:
    default:
      - select_entity: null
      - state_entity: null
      - state_map: null
      - ghost_border: none
      - ghost_padding: none
    card:
      type: custom:mushroom-select-card
      entity: '[[select_entity]]'
      primary_info: none
      secondary_info: none
      layout: horizontal
      tap_action:
        action: none
      state_map: '[[state_map]]'
      card_mod:
        class: >-
          generic_select ghost_card_[[ghost_border]]
          ghost_padding_[[ghost_padding]]
        style:
          mushroom-shape-icon$: |
            {% set color = config.state_map |
              selectattr('state', 'eq', states('[[state_entity]]')) |
              map(attribute="color") |
              first
            %}

            .shape {
                --shape-color: rgba(var(--rgb-{{ color }}), 0.2) !important;
            }
          .: |
            {% set color = config.state_map |
              selectattr('state', 'eq', states('[[state_entity]]')) |
              map(attribute="color") |
              first
            %}

            mushroom-state-item {
              cursor: default;
              pointer-events: none;
            }
            ha-state-icon {
                color: rgb(var(--rgb-{{ color }}));
            }
  climate_aggregated_card_template:
    default:
      - climate_entity: null
      - climate_name: null
      - target_temperature_entity: null
      - swing_mode_entity: null
      - fan_mode_entity: null
      - state_map:
          - state: auto
            name: AutomÃ¡tico
            color: green
          - state: cool
            name: Resfriar
            color: blue
          - state: dry
            name: Desumidificar
            color: orange
          - state: fan_only
            name: Ventilar
            color: teal
          - state: 'off'
            name: Desligado
            color: disabled
    card:
      type: custom:layout-card
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: 50% 50%
        grid-template-rows: auto
        grid-template-areas: |
          "climate-status climate-temperatura"
          "climate-direcao climate-velocidade"
          "climate-controller climate-controller"
      cards:
        - type: custom:decluttering-card
          template: generic_status_template
          variables:
            - entity: '[[climate_entity]]'
            - name: '[[climate_name]]'
            - icon: phu:air-conditioner
            - state_map: '[[state_map]]'
            - ghost_border: top_left
          view_layout:
            grid-area: climate-status
        - type: custom:decluttering-card
          template: generic_number_template
          variables:
            - number_entity: '[[target_temperature_entity]]'
            - state_entity: '[[climate_entity]]'
            - state_map: '[[state_map]]'
            - ghost_border: top_right
          view_layout:
            grid-area: climate-temperatura
        - type: custom:decluttering-card
          template: generic_select_template
          variables:
            - select_entity: '[[swing_mode_entity]]'
            - state_entity: '[[climate_entity]]'
            - state_map: '[[state_map]]'
            - ghost_border: middle_left
            - ghost_padding: top0
          view_layout:
            grid-area: climate-direcao
        - type: custom:decluttering-card
          template: generic_select_template
          variables:
            - select_entity: '[[fan_mode_entity]]'
            - state_entity: '[[climate_entity]]'
            - state_map: '[[state_map]]'
            - ghost_border: middle_right
            - ghost_padding: top0
          view_layout:
            grid-area: climate-velocidade
        - type: custom:layout-card
          layout_type: custom:grid-layout
          layout:
            grid-template-columns: 1fr 1fr 1fr 1fr 1fr
            grid-template-rows: auto
            grid-template-areas: >
              "controller-auto controller-cool controller-dry
              controller-fan_only controller-off"
            margin: 0
          cards:
            - type: custom:decluttering-card
              template: generic_action_template
              variables:
                - action_entity: '[[climate_entity]]'
                - action_state: auto
                - action_icon: mdi:calendar-sync
                - action_color: green
                - action_command:
                    action: call-service
                    service: climate.set_hvac_mode
                    target:
                      entity_id: '[[climate_entity]]'
                    data:
                      hvac_mode: auto
                - ghost_border: bottom_left
                - ghost_padding: top0
              view_layout:
                grid-area: controller-auto
            - type: custom:decluttering-card
              template: generic_action_template
              variables:
                - action_entity: '[[climate_entity]]'
                - action_state: cool
                - action_icon: mdi:snowflake
                - action_color: blue
                - action_command:
                    action: call-service
                    service: climate.set_hvac_mode
                    target:
                      entity_id: '[[climate_entity]]'
                    data:
                      hvac_mode: cool
                - ghost_border: bottom_center
                - ghost_padding: top0
              view_layout:
                grid-area: controller-cool
            - type: custom:decluttering-card
              template: generic_action_template
              variables:
                - action_entity: '[[climate_entity]]'
                - action_state: dry
                - action_icon: mdi:water-percent
                - action_color: orange
                - action_command:
                    action: call-service
                    service: climate.set_hvac_mode
                    target:
                      entity_id: '[[climate_entity]]'
                    data:
                      hvac_mode: dry
                - ghost_border: bottom_center
                - ghost_padding: top0
              view_layout:
                grid-area: controller-dry
            - type: custom:decluttering-card
              template: generic_action_template
              variables:
                - action_entity: '[[climate_entity]]'
                - action_state: fan_only
                - action_icon: mdi:fan
                - action_color: teal
                - action_command:
                    action: call-service
                    service: climate.set_hvac_mode
                    target:
                      entity_id: '[[climate_entity]]'
                    data:
                      hvac_mode: fan_only
                - ghost_border: bottom_center
                - ghost_padding: top0
              view_layout:
                grid-area: controller-fan_only
            - type: custom:decluttering-card
              template: generic_action_template
              variables:
                - action_entity: '[[climate_entity]]'
                - action_state: 'off'
                - action_icon: mdi:power
                - action_color: disabled
                - action_command:
                    action: call-service
                    service: climate.set_hvac_mode
                    target:
                      entity_id: '[[climate_entity]]'
                    data:
                      hvac_mode: 'off'
                - ghost_border: bottom_right
                - ghost_padding: top0
              view_layout:
                grid-area: controller-off
          view_layout:
            grid-area: climate-controller
  cover_aggregated_card_template:
    default:
      - cover_entity: null
      - cover_name: null
      - state_map:
          - state: open
            name: Aberto
            icon: mdi:garage-open-variant
            color: primary
          - state: closed
            name: Fechado
            icon: mdi:garage-variant
            color: disabled
    card:
      type: custom:layout-card
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: 50% 50%
        grid-template-rows: auto
        grid-template-areas: |
          "cover-status cover-status"
          "cover-open cover-close"
      cards:
        - type: custom:decluttering-card
          template: generic_status_template
          variables:
            - entity: '[[cover_entity]]'
            - name: '[[cover_name]]'
            - state_map: '[[state_map]]'
            - ghost_border: top
          view_layout:
            grid-area: cover-status
        - type: custom:decluttering-card
          template: generic_action_template
          variables:
            - action_entity: '[[cover_entity]]'
            - action_state: open
            - action_icon: mdi:arrow-up
            - action_color: disabled
            - action_command:
                action: call-service
                service: cover.open_cover
                target:
                  entity_id: '[[cover_entity]]'
            - disable_when: active
            - ghost_border: bottom_left
            - ghost_padding: top0
        - type: custom:decluttering-card
          template: generic_action_template
          variables:
            - action_entity: '[[cover_entity]]'
            - action_state: closed
            - action_icon: mdi:arrow-down
            - action_color: disabled
            - action_command:
                action: call-service
                service: cover.close_cover
                target:
                  entity_id: '[[cover_entity]]'
            - disable_when: active
            - ghost_border: bottom_right
            - ghost_padding: top0
views:
  - title: Teste
    path: teste
    badges: []
    cards:
      - type: custom:decluttering-card
        template: climate_aggregated_card_template
        variables:
          - climate_entity: climate.quarto_do_edu_ar_condicionado
          - climate_name: Ar-condicionado
          - target_temperature_entity: number.quarto_do_edu_ar_condicionado_temperatura_alvo
          - swing_mode_entity: select.quarto_do_edu_ar_condicionado_modo_de_oscilacao
          - fan_mode_entity: select.quarto_do_edu_ar_condicionado_modo_de_ventilacao
      - type: custom:layout-card
        layout_type: custom:grid-layout
        layout:
          grid-template-columns: 50% 50%
          grid-template-rows: auto
          grid-template-areas: |
            "light-status light-brightness"
            "light-temperature light-temperature"
            "light-color light-color"
        cards:
          - type: custom:decluttering-card
            template: generic_status_template
            variables:
              - entity: light.quarto_do_edu_luz_de_cabeceira
              - name: Cabeceira
              - icon: phu:play-bar-v-two-in
              - state_map:
                  - state: 'on'
                    name: Ligado
                    color: accent
                  - state: 'off'
                    name: Desligado
                    color: disabled
              - color_mode: rgb
              - ghost_border: top_left
            view_layout:
              grid-area: light-status
          - type: custom:mushroom-number-card
            entity: number.quarto_do_edu_luz_de_teto_brilho
            layout: horizontal
            display_mode: slider
            primary_info: none
            secondary_info: none
            card_mod:
              class: ghost_card_top_right
            view_layout:
              grid-area: light-brightness
          - type: custom:mushroom-number-card
            entity: number.quarto_do_edu_luz_de_teto_temperatura
            display_mode: slider
            layout: horizontal
            primary_info: none
            secondary_info: none
            card_mod:
              class: ghost_card_middle ghost_padding_top0
              style:
                mushroom-number-value-control$: |
                  mushroom-slider {
                    --gradient: -webkit-linear-gradient(right, rgb(255, 160, 0) 0%, white 100%);
                  }
                mushroom-number-value-control$ mushroom-slider$: |
                  .container .slider .slider-track-active {
                    bottom: 0px;
                    border-radius: 3px;
                    background-color: white;
                    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px;
                    left: calc(var(--value, 0) * (100% - 10px));
                    width: 10px;
                    transition: left 180ms ease-in-out 0s;
                    transform: none;
                  }

                  .container .slider .slider-track-active::after {
                      display: block;
                      content: "";
                      background-color: var(--main-color);
                      position: absolute;
                      inset: 0px;
                      margin: auto;
                      height: 20px;
                      width: 2px;
                      border-radius: 1px;
                  }
                mushroom-shape-icon$: |
                  {% set entity = "light.quarto_do_edu_luz_de_cabeceira" %}
                  {% set rgb = state_attr(entity, "rgb_color") %}
                  .shape {
                    --shape-color: rgba({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }}, 0.2) !important;
                    --icon-color: rgb({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }});
                  }
            view_layout:
              grid-area: light-temperature
          - type: custom:mushroom-number-card
            entity: number.quarto_do_edu_luz_de_teto_cor
            layout: horizontal
            primary_info: none
            secondary_info: none
            view_layout:
              grid-area: light-color
            card_mod:
              class: ghost_card_bottom ghost_padding_top0
              style:
                mushroom-number-value-control$: |
                  mushroom-slider {
                    --gradient: -webkit-linear-gradient(left, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 66%, #f0f 83%, #f00 100%)
                  }
                mushroom-number-value-control$ mushroom-slider$: |
                  .container .slider .slider-track-active {
                    bottom: 0px;
                    border-radius: 3px;
                    background-color: white;
                    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px;
                    left: calc(var(--value, 0) * (100% - 10px));
                    width: 10px;
                    transition: left 180ms ease-in-out 0s;
                    transform: none;
                  }

                  .container .slider .slider-track-active::after {
                      display: block;
                      content: "";
                      background-color: var(--main-color);
                      position: absolute;
                      inset: 0px;
                      margin: auto;
                      height: 20px;
                      width: 2px;
                      border-radius: 1px;
                  }
                mushroom-shape-icon$: |
                  {% set entity = "light.quarto_do_edu_luz_de_cabeceira" %}
                  {% set rgb = state_attr(entity, "rgb_color") %}
                  .shape {
                    --shape-color: rgba({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }}, 0.2) !important;
                    --icon-color: rgb({{ rgb[0] }},{{ rgb[1] }},{{ rgb[2] }});
                  }
      - type: custom:mushroom-light-card
        entity: light.quarto_do_edu_luz_de_cabeceira
        show_brightness_control: true
        show_color_control: true
        show_color_temp_control: true
        use_light_color: true
      - type: custom:decluttering-card
        template: cover_aggregated_card_template
        variables:
          - cover_entity: cover.frente_portao_da_garagem
          - cover_name: PortÃ£o da Garagem
